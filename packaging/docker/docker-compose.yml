# Docker Compose configuration for FPGA NPU development and deployment

version: '3.8'

services:
  # Development environment
  npu-dev:
    build:
      context: ..
      dockerfile: packaging/docker/Dockerfile
      target: devel
    container_name: fpga-npu-dev
    privileged: true
    volumes:
      - ..:/workspace
      - /dev:/dev
      - /lib/modules:/lib/modules:ro
    environment:
      - NPU_DEBUG=1
      - NPU_LOG_LEVEL=DEBUG
    ports:
      - "8080:8080"
    working_dir: /workspace
    command: /bin/bash

  # Runtime environment
  npu-runtime:
    build:
      context: ..
      dockerfile: packaging/docker/Dockerfile
      target: runtime
    container_name: fpga-npu-runtime
    privileged: true
    volumes:
      - /dev:/dev
      - /lib/modules:/lib/modules:ro
      - npu-logs:/var/log/fpga-npu
    environment:
      - NPU_LOG_LEVEL=INFO
    ports:
      - "8081:8080"
    restart: unless-stopped

  # Testing environment
  npu-test:
    build:
      context: ..
      dockerfile: packaging/docker/Dockerfile
      target: testing
    container_name: fpga-npu-test
    privileged: true
    volumes:
      - ..:/workspace
      - /dev:/dev
      - /lib/modules:/lib/modules:ro
      - test-results:/workspace/test-results
    environment:
      - NPU_DEBUG=1
      - NPU_LOG_LEVEL=DEBUG
    command: python3 scripts/run_tests.py --all

  # Documentation server
  npu-docs:
    build:
      context: ..
      dockerfile: packaging/docker/Dockerfile
      target: docs
    container_name: fpga-npu-docs
    ports:
      - "8082:80"
    restart: unless-stopped

  # Package builder
  npu-packager:
    build:
      context: ..
      dockerfile: packaging/docker/Dockerfile
      target: packager
    container_name: fpga-npu-packager
    volumes:
      - package-output:/packages
    environment:
      - PACKAGE_VERSION=1.0.0

  # Monitoring and metrics
  npu-monitor:
    image: prom/prometheus:latest
    container_name: fpga-npu-monitor
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Log aggregation
  npu-logging:
    image: grafana/loki:2.6.0
    container_name: fpga-npu-logging
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml

  # Dashboard
  npu-dashboard:
    image: grafana/grafana:latest
    container_name: fpga-npu-dashboard
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning

volumes:
  npu-logs:
    driver: local
  test-results:
    driver: local
  package-output:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: fpga-npu-network